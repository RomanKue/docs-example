name: |
  "New UNITY App" issue
on:
  issues:
    types:
      - edited
      - reopened
      - labeled
  issue_comment:
    types:
      - created

concurrency:
  group: new-app-issue-${{ github.event.issue.number }}
  cancel-in-progress: false
jobs:
  new-app-issue:
    runs-on: atc-ubuntu-latest
    timeout-minutes: 10
    permissions: write-all
    outputs:
      app-repository: ${{ steps.new-app-issue.outputs.app-repository }}
      make-angular-stub: ${{ steps.new-app-issue.outputs.make-angular-stub }}
      make-quarkus-stub: ${{ steps.new-app-issue.outputs.make-quarkus-stub }}
      ci-quarkus: ${{ steps.new-app-issue.outputs.ci-quarkus }}
      ci-angular: ${{ steps.new-app-issue.outputs.ci-angular }}
    steps:
      - uses: actions/checkout@v3
      - name: build-actions
        uses: ./.github/actions/build-actions
      - name: new-app-issue
        id: new-app-issue
        uses: ./.github/actions/new-app-issue
        with:
          GITHUB_TOKEN: ${{ secrets.UNITY_BOT_TOKEN }}
          working-directory: actions
  make-angular-stub:
    runs-on: atc-ubuntu-latest
    timeout-minutes: 20
    needs: new-app-issue
    if: needs.new-app-issue.outputs.make-angular-stub
    concurrency:
      group: make-stub
      cancel-in-progress: false
    env:
      NAME: ${{ needs.new-app-issue.outputs.make-angular-stub }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ needs.new-app-issue.outputs.app-repository }}
          token: ${{ secrets.UNITY_BOT_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: make stub
        shell: bash
        run: |
          set -xeu pipefail
          ANGULAR_VERSION=14

          echo "NAME=$NAME"
          echo "ANGULAR_VERSION=$ANGULAR_VERSION"

          npm install --location=global @angular/cli@$ANGULAR_VERSION
          ng new "$NAME" --defaults --style=scss --skip-git

          cd "$NAME"
          npx ng analytics off

          # increase budget size to be able to built with design system
          npx ng config "projects.$NAME.architect.build.configurations.production.budgets[0].maximumWarning" 2mb
          npx ng config "projects.$NAME.architect.build.configurations.production.budgets[0].maximumError" 2mb

          # design system, see https://density.bmwgroup.net/v7/guides/setup/getting-started
          npm config set @bmw-ds:registry https://nexus.bmwgroup.net/repository/bmw_npm_repositories/
          npm install @angular/cdk@$ANGULAR_VERSION @bmw-ds/components@latest

          echo "@import '../node_modules/@bmw-ds/components/density-styles/styles/scss/density-styles-ng.scss';" > src/styles.scss

          echo "
          import { NgModule } from '@angular/core';
          import { BrowserModule } from '@angular/platform-browser';

          import { AppComponent } from './app.component';
          import {
            DsButtonModule,
          } from '@bmw-ds/components';

          @NgModule({
            declarations: [
              AppComponent
            ],
            imports: [
              BrowserModule,
              DsButtonModule,
            ],
            providers: [ ],
            bootstrap: [ AppComponent ]
          })
          export class AppModule { }
          " > src/app/app.module.ts

          # list what has been created
          ls -lah
      - name: create workflow
        shell: bash
        run: |
          mkdir -p .github/workflows
          echo "${{ needs.new-app-issue.outputs.ci-angular }}" > ".github/workflows/ci-${{ env.NAME }}.yaml"
          ls -lah .github/workflows
      - name: commit and push
        shell: bash
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@no-mail.com'
          git add ${{ env.NAME }}
          git add .github/workflows/*.yaml
          git commit --all --message 'create quarkus stub: ${{ env.NAME }}'
          git pull --rebase origin main
          git push -u origin main
  make-quarkus-stub:
    runs-on: atc-ubuntu-latest
    timeout-minutes: 20
    needs: new-app-issue
    if: needs.new-app-issue.outputs.make-quarkus-stub
    concurrency:
      group: make-stub
      cancel-in-progress: false
    env:
      NAME: ${{ needs.new-app-issue.outputs.make-quarkus-stub }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ needs.new-app-issue.outputs.app-repository }}
          token: ${{ secrets.UNITY_BOT_TOKEN }}
      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: setup maven
        uses: pmd/setup-maven@v1
      - name: make stub
        shell: bash
        run: |
          set -xeu pipefail
          REPO=$(basename $(git rev-parse --show-toplevel))

          echo "NAME=$NAME"
          echo "REPO=$REPO"

          # based on https://quarkus.io/guides/getting-started
          mvn io.quarkus.platform:quarkus-maven-plugin:2.12.1.Final:create \
          -DprojectGroupId=com.bmw.unity."$REPO"."$NAME" \
          -DprojectArtifactId="$NAME" \
          -Dextensions="resteasy-reactive"

          cd "$NAME"

          # see https://quarkus.io/guides/container-image#docker
          ./mvnw quarkus:add-extension -Dextensions="container-image-docker"

          # list what has been created
          ls -lah
      - name: create workflow
        shell: bash
        run: |
          mkdir -p .github/workflows
          echo "${{ needs.new-app-issue.outputs.ci-quarkus }}" > ".github/workflows/ci-${{ env.NAME }}.yaml"
          ls -lah .github/workflows
      - name: commit and push
        shell: bash
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@no-mail.com'
          git add ${{ env.NAME }}
          git add .github/workflows/*.yaml
          git commit --all --message 'create quarkus stub: ${{ env.NAME }}'
          git pull --rebase origin main
          git push -u origin main
