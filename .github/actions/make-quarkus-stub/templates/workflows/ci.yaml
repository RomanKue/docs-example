name: ci-{{ .Env.NAME }}
on:
  push:
    branches:
      - main
  pull_request:
env:
  DEPLOYMENT: {{ .Env.NAME }}
  REGISTRY: containers.atc-github.azure.cloud.bmw
jobs:
  ci-{{ .Env.NAME }}:
    outputs:
      cache-hit: ${{"{{"}} steps.cache.outputs.cache-hit {{"}}"}}
    runs-on: atc-ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: cache
        id: cache
        uses: actions/cache@v3
        with:
          # don't rebuild all the time if nothing relevant changes
          key: ci-${{"{{"}} env.DEPLOYMENT {{"}}"}}-${{"{{"}} hashFiles( format('{0}/**', env.DEPLOYMENT ), '.github/workflows/**' ) {{"}}"}}
          path: ${{"{{"}} env.DEPLOYMENT {{"}}"}}
      - name: setup java
        if: ${{"{{"}} steps.cache.outputs.cache-hit != 'true' {{"}}"}}
        uses: actions/setup-java@v3
        with:
          distribution: "{{ .Env.JAVA_DISTRIBUTION }}"
          java-version: "{{ .Env.JAVA_VERSION }}"
          cache: maven
      - name: setup maven
        if: ${{"{{"}} steps.cache.outputs.cache-hit != 'true' {{"}}"}}
        uses: pmd/setup-maven@v1
      - name: build
        if: ${{"{{"}} steps.cache.outputs.cache-hit != 'true' {{"}}"}}
        working-directory: ${{"{{"}} env.DEPLOYMENT {{"}}"}}
        # see https://quarkus.io/guides/container-image#container-image-options
        env:
          QUARKUS_CONTAINER_IMAGE_REGISTRY: ${{"{{"}} env.REGISTRY {{"}}"}}
          QUARKUS_CONTAINER_IMAGE_USERNAME: USERNAME
          QUARKUS_CONTAINER_IMAGE_PASSWORD: ${{"{{"}} secrets.GITHUB_TOKEN {{"}}"}}
          QUARKUS_CONTAINER_IMAGE_NAME: ${{"{{"}} github.event.repository.name {{"}}"}}-${{"{{"}} env.DEPLOYMENT {{"}}"}}
          QUARKUS_CONTAINER_IMAGE_TAG: latest
          QUARKUS_CONTAINER_IMAGE_GROUP: unity
          QUARKUS_CONTAINER_IMAGE_BUILD: "true"
          QUARKUS_CONTAINER_IMAGE_PUSH: ${{"{{"}} github.ref == 'refs/heads/main' {{"}}"}}
        run: mvn clean package
  deploy-int:
    needs:
      - ci-{{ .Env.NAME }}
    if: ${{"{{"}} needs.ci-{{ .Env.NAME }}.outputs.cache-hit != 'true' {{"}}"}}
    uses: {{ .Env.ORG }}/{{ .Env.REPO }}/.github/workflows/deploy.yaml@main
    with:
      environment: int
    secrets:
      KUBERNETES_TOKEN: ${{"{{"}} secrets.KUBERNETES_TOKEN {{"}}"}}
      KUBERNETES_HOST: ${{"{{"}} secrets.KUBERNETES_HOST {{"}}"}}
      KUBERNETES_NAMESPACE: ${{"{{"}} secrets.KUBERNETES_NAMESPACE {{"}}"}}
# Uncomment the following lines, when the production environment is available
#   deploy-prod:
#     needs:
#       - ci-{{ .Env.NAME }}
#       - deploy-int
#     if: ${{"{{"}} needs.ci-{{ .Env.NAME }}.outputs.cache-hit != 'true' {{"}}"}}
#     uses: {{ .Env.ORG }}/{{ .Env.REPO }}/.github/workflows/deploy.yaml@main
#     with:
#       environment: prod
#     secrets:
#       KUBERNETES_TOKEN: ${{"{{"}} secrets.KUBERNETES_TOKEN {{"}}"}}
#       KUBERNETES_HOST: ${{"{{"}} secrets.KUBERNETES_HOST {{"}}"}}
#       KUBERNETES_NAMESPACE: ${{"{{"}} secrets.KUBERNETES_NAMESPACE {{"}}"}}
